<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ms.study</groupId>
    <artifactId>study</artifactId>
    <version>1.0-SNAPSHOT</version>



    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <mybatis-spring-starter.version>1.1.1</mybatis-spring-starter.version>
        <mysql-connector-java.version>5.1.44</mysql-connector-java.version>
        <mybatis-generator-core.version>1.3.3</mybatis-generator-core.version>
        <mybatis-generator-maven-plugin.version>1.3.3</mybatis-generator-maven-plugin.version>
        <shiro.version>1.3.2</shiro.version>
        <thymeleaf-extras-shiro.version>1.2.1</thymeleaf-extras-shiro.version>
        <springfox-version>2.7.0</springfox-version>
        <validation-api.version>1.1.0.Final</validation-api.version>
        <json-lib.version>2.4</json-lib.version>
        <logback-classic.version>1.1.7</logback-classic.version>
        <logback-core.version>1.1.7</logback-core.version>
        <druid.version>1.1.3</druid.version>
        <pagehelper-spring-boot-starter.version>1.1.1</pagehelper-spring-boot-starter.version>
        <commons-lang3.version>3.4</commons-lang3.version>
        <commons-fileupload.version>1.3.3</commons-fileupload.version>
        <aliyun-java-sdk-core.version>3.2.8</aliyun-java-sdk-core.version>
        <aliyun-java-sdk-dysmsapi.version>1.1.0</aliyun-java-sdk-dysmsapi.version>
        <kaptcha.version>2.3.2</kaptcha.version>
        <spring-boot-maven-plugin.version>1.5.9.RELEASE</spring-boot-maven-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>${json-lib.version}</version>
            <classifier>jdk15</classifier>
        </dependency>

    </dependencies>




    <build>
        <plugins>


            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>utf-8</encoding>
                    <useDefaultDelimiters>true</useDefaultDelimiters>
                </configuration>
            </plugin>
            <plugin>
                <!-- 指定maven编译的jdk版本,如果不指定,maven3默认用jdk 1.5 maven2默认用jdk1.3 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中不能使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
                    <source>1.8</source> <!-- 源代码使用的JDK版本 -->
                    <target>1.8</target> <!-- 需要生成的目标class文件的编译版本 -->
                    <encoding>UTF-8</encoding><!-- 字符集编码 -->
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>